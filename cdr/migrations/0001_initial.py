# Generated by Django 5.0.7 on 2024-08-09 01:42

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ExamResultDetailAST',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveIntegerField(db_comment='序号', verbose_name='序号')),
                ('ast_code', models.CharField(db_comment='药敏代码', max_length=36, verbose_name='药敏代码')),
                ('ast_name', models.CharField(db_comment='药敏名称', max_length=36, verbose_name='药敏名称')),
                ('ast_abbr', models.CharField(blank=True, db_comment='药敏名称缩写', max_length=36, null=True, verbose_name='药敏名称缩写')),
                ('value_qualitative', models.CharField(db_comment='药敏定性结果', max_length=64, verbose_name='药敏定性结果')),
                ('value_qualitative_desc', models.CharField(db_comment='药敏定性结果描述', max_length=64, verbose_name='药敏定性结果描述')),
                ('value_qualitative_disk', models.CharField(blank=True, db_comment='药物敏感度', max_length=16, null=True, verbose_name='药物敏感度')),
                ('value_ration', models.CharField(blank=True, db_comment='药敏定量结果', max_length=16, null=True, verbose_name='药敏定量结果')),
                ('mic', models.CharField(blank=True, db_comment='最小抑菌浓度', max_length=16, null=True, verbose_name='最小抑菌浓度')),
                ('exam_result_detail_id', models.CharField(db_comment='检验结果明细表', max_length=128, verbose_name='检验结果明细表')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '检验结果药敏结果',
                'verbose_name_plural': '检验结果药敏结果集合',
                'db_table_comment': '检验结果药敏结果表',
            },
        ),
        migrations.CreateModel(
            name='ExamResultMain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_id', models.CharField(db_comment='申请单id', max_length=36, verbose_name='申请单id')),
                ('order_id', models.CharField(db_comment='医嘱id', max_length=36, verbose_name='医嘱id')),
                ('doc_id', models.CharField(db_comment='申请单医生工号', max_length=36, verbose_name='申请单医生工号')),
                ('doc_name', models.CharField(db_comment='申请单医生姓名', max_length=64, verbose_name='申请单医生姓名')),
                ('dept_id', models.CharField(db_comment='申请单开单科室ID', max_length=36, verbose_name='申请单开单科室ID')),
                ('dept_name', models.CharField(db_comment='申请单开单科室名称', max_length=18, verbose_name='申请单开单科室名称')),
                ('item_code', models.CharField(db_comment='检验项目代码', max_length=36, verbose_name='检验项目代码')),
                ('item_name', models.CharField(db_comment='检验项目名称', max_length=36, verbose_name='检验项目名称')),
                ('item_cls_code', models.CharField(blank=True, db_comment='检验项目代码', help_text='江西省口腔医院市互认上传使用', max_length=36, null=True, verbose_name='检验项目代码')),
                ('item_cls_name', models.CharField(blank=True, db_comment='检验项目名称', help_text='江西省口腔医院市互认上传使用', max_length=64, null=True, verbose_name='检验项目名称')),
                ('exam_report_id', models.CharField(db_comment='检验报告', max_length=64, verbose_name='检验报告')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '检验结果主表',
                'verbose_name_plural': '检验结果集合',
                'db_table_comment': '检验结果主表',
            },
        ),
        migrations.CreateModel(
            name='ExamStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_no', models.CharField(db_comment='电子申请单编号', max_length=36, verbose_name='电子申请单编号')),
                ('apply_desc', models.CharField(blank=True, db_comment='申请单描述', max_length=255, null=True, verbose_name='申请单描述')),
                ('apply_status', models.CharField(blank=True, db_comment='申请单状态', max_length=8, null=True, verbose_name='申请单状态')),
                ('bar_code', models.CharField(db_comment='条码号', max_length=36, verbose_name='条码号')),
                ('specimen_cls_code', models.CharField(blank=True, db_comment='标本类别代码', max_length=8, null=True, verbose_name='标本类别代码')),
                ('specimen_cls_name', models.CharField(blank=True, db_comment='标本类别名称', max_length=36, null=True, verbose_name='标本类别名称')),
                ('gmt_execute', models.DateTimeField(db_comment='操作日期时间', verbose_name='操作日期时间')),
                ('status_code', models.CharField(choices=[('SE01', '条码打印'), ('SE02', '取消打印'), ('SE03', '标本采集'), ('SE04', '取消采集'), ('SE05', '标本送检'), ('SE06', '标本送达'), ('SE07', '标本接收'), ('SE08', '标本拒收'), ('SE09', '标本检测'), ('SE10', '已出报告'), ('SE11', '报告已打印')], db_comment='检验状态', max_length=4, verbose_name='检验状态')),
                ('reason', models.CharField(blank=True, db_comment='操作描述（如标本拒绝原因）', help_text='如标本拒绝原因', max_length=128, null=True, verbose_name='操作描述')),
                ('executor_id', models.CharField(db_comment='操作者代码', max_length=36, verbose_name='操作者代码')),
                ('executor', models.CharField(db_comment='操作者姓名', max_length=64, verbose_name='操作者姓名')),
                ('dept_id', models.CharField(db_comment='操作科室ID', max_length=36, verbose_name='操作科室ID')),
                ('dept_name', models.CharField(db_comment='操作科室名称', max_length=64, verbose_name='操作科室名称')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('adm_cls_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '检验状态信息',
                'verbose_name_plural': '检验状态信息',
                'db_table_comment': '检验状态信息',
            },
        ),
        migrations.CreateModel(
            name='InPatient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inpatient_id', models.CharField(db_comment='住院号标识', max_length=36, verbose_name='住院号标识')),
                ('times', models.PositiveIntegerField(db_comment='就诊次数', verbose_name='就诊次数')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, unique=True, verbose_name='就诊流水号')),
                ('adm_cls_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('gmt_effect_low', models.DateTimeField(blank=True, db_comment='入院日期时间', null=True, verbose_name='入院日期时间')),
                ('reason', models.CharField(blank=True, db_comment='就诊原因描述', max_length=255, null=True, verbose_name='就诊原因描述')),
                ('ins_code', models.CharField(choices=[('01', '城镇职工基本医疗保险'), ('02', '城镇居民基本医疗保险'), ('03', '新型农村合作医疗'), ('04', '公务员医疗补助'), ('05', '企业补充医疗保险'), ('06', '大额补充医疗保险'), ('07', '商业医疗保险'), ('99', '其他')], db_comment='医疗保险类别代码', max_length=2, verbose_name='医疗保险类别代码')),
                ('in_times', models.PositiveSmallIntegerField(db_comment='住院次数', verbose_name='住院次数')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('doc_id', models.CharField(blank=True, db_comment='责任医生的职工号', max_length=36, null=True, verbose_name='责任医生的职工号')),
                ('doc_name', models.CharField(blank=True, db_comment='责任医师姓名', max_length=64, null=True, verbose_name='责任医师姓名')),
                ('dept_id', models.CharField(blank=True, db_comment='科室id', max_length=36, null=True, verbose_name='科室id')),
                ('dept_name', models.CharField(blank=True, db_comment='科室名称', max_length=64, null=True, verbose_name='科室名称')),
                ('ward_id', models.CharField(blank=True, db_comment='病区id', max_length=36, null=True, verbose_name='病区id')),
                ('ward_name', models.CharField(blank=True, db_comment='病区名称', max_length=64, null=True, verbose_name='病区名称')),
                ('room_id', models.CharField(blank=True, db_comment='病房id', max_length=36, null=True, verbose_name='病房id')),
                ('room_name', models.CharField(blank=True, db_comment='病房名称', max_length=64, null=True, verbose_name='病房名称')),
                ('bed_id', models.CharField(blank=True, db_comment='床号ID', max_length=36, null=True, verbose_name='床号ID')),
                ('bed_name', models.CharField(blank=True, db_comment='床号', max_length=64, null=True, verbose_name='床号')),
                ('org_code', models.CharField(choices=[('12360000491015900T', '南昌大学附属口腔医院（江西省口腔医院）')], db_comment='服务机构', max_length=18, verbose_name='服务机构')),
                ('diags_a', models.JSONField(blank=True, db_comment='西医诊断', null=True, verbose_name='西医诊断')),
                ('diags_b', models.JSONField(blank=True, db_comment='中医诊断', null=True, verbose_name='中医诊断')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '住院就诊信息',
                'verbose_name_plural': '住院就诊信息',
                'db_table_comment': '住院就诊信息',
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_no', models.CharField(db_comment='申请单号', max_length=36, unique=True, verbose_name='申请单号')),
                ('apply_desc', models.CharField(blank=True, db_comment='描述/说明', max_length=255, null=True, verbose_name='描述/说明')),
                ('gmt_apply', models.DateTimeField(blank=True, db_comment='申请日期', null=True, verbose_name='申请日期')),
                ('anesthesia_code', models.CharField(blank=True, db_comment='麻醉方式编码', max_length=8, null=True, verbose_name='麻醉方式编码')),
                ('anesthesia_name', models.CharField(blank=True, db_comment='麻醉方式名称', max_length=64, null=True, verbose_name='麻醉方式名称')),
                ('property_code', models.PositiveSmallIntegerField(choices=[(1, '择期'), (2, '围期')], db_comment='手术性质编码（择期，围期)', verbose_name='手术性质编码')),
                ('doc_id', models.CharField(blank=True, db_comment='申请医师工号', max_length=36, null=True, verbose_name='申请医师工号')),
                ('doc_name', models.CharField(blank=True, db_comment='申请医师姓名', max_length=64, null=True, verbose_name='申请医师姓名')),
                ('dept_id', models.CharField(blank=True, db_comment='申请科室编码', max_length=36, null=True, verbose_name='申请科室编码')),
                ('dept_name', models.CharField(blank=True, db_comment='申请科室名称', max_length=64, null=True, verbose_name='申请科室名称')),
                ('gmt_review', models.DateTimeField(blank=True, db_comment='审核日期', null=True, verbose_name='审核日期')),
                ('reviewer_id', models.CharField(blank=True, db_comment='审核医师工号', max_length=36, null=True, verbose_name='审核医师工号')),
                ('reviewer', models.CharField(blank=True, db_comment='审核人姓名', max_length=64, null=True, verbose_name='审核人姓名')),
                ('surgical_code', models.CharField(blank=True, db_comment='手术名称编码', max_length=8, null=True, verbose_name='手术名称编码')),
                ('surgical_name', models.CharField(blank=True, db_comment='手术名称', max_length=64, null=True, verbose_name='手术名称')),
                ('grade_code', models.PositiveSmallIntegerField(choices=[(1, '一级手术'), (2, '二级手术'), (3, '三级手术'), (4, '四级手术')], db_comment='手术等级编码', verbose_name='手术等级编码')),
                ('gmt_booking', models.DateTimeField(blank=True, db_comment='预订手术时间', null=True, verbose_name='预订手术时间')),
                ('execute_doc_id', models.CharField(blank=True, db_comment='手术医师工号', max_length=36, null=True, verbose_name='手术医师工号')),
                ('execute_doc_name', models.CharField(blank=True, db_comment='手术医师姓名', max_length=64, null=True, verbose_name='手术医师姓名')),
                ('execute_dept_id', models.CharField(blank=True, db_comment='执行科室编码', max_length=36, null=True, verbose_name='执行科室编码')),
                ('execute_dept_name', models.CharField(blank=True, db_comment='执行科室名称', max_length=64, null=True, verbose_name='执行科室名称')),
                ('note', models.CharField(blank=True, db_comment='注意事项', max_length=255, null=True, verbose_name='注意事项')),
                ('diags', models.JSONField(blank=True, db_comment='诊断信息', help_text='诊断(手术申请原因)', null=True, verbose_name='诊断信息')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '手术申请信息',
                'verbose_name_plural': '手术申请信息',
                'db_table_comment': '手术申请信息',
            },
        ),
        migrations.CreateModel(
            name='OperationSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.CharField(db_comment='手术排班号', max_length=36, unique=True, verbose_name='手术排班号')),
                ('gmt_booking', models.DateTimeField(db_comment='预约手术时间', verbose_name='预约手术时间')),
                ('duration', models.PositiveSmallIntegerField(db_comment='预计手术时长', verbose_name='预计手术时长')),
                ('duration_unit', models.CharField(blank=True, db_comment='预计手术时长单位', max_length=8, null=True, verbose_name='预计手术时长单位')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('device_id', models.CharField(blank=True, db_comment='预约设备编码', max_length=36, null=True, verbose_name='预约设备编码')),
                ('device_name', models.CharField(blank=True, db_comment='预约设备名称', max_length=64, null=True, verbose_name='预约设备名称')),
                ('doc_id', models.CharField(blank=True, db_comment='主刀医生工号', max_length=36, null=True, verbose_name='主刀医生工号')),
                ('doc_name', models.CharField(blank=True, db_comment='主刀医生名称', max_length=64, null=True, verbose_name='主刀医生名称')),
                ('dept_id', models.CharField(blank=True, db_comment='执行科室编码', max_length=36, null=True, verbose_name='执行科室编码')),
                ('dept_name', models.CharField(blank=True, db_comment='执行科室名称', max_length=255, null=True, verbose_name='执行科室名称')),
                ('room', models.CharField(blank=True, db_comment='手术间', max_length=36, null=True, verbose_name='手术间')),
                ('apply_no', models.CharField(db_comment='手术申请单号', max_length=36, unique=True, verbose_name='手术申请单号')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
                ('assistants', models.JSONField(blank=True, db_comment='助手信息', null=True, verbose_name='助手信息')),
            ],
            options={
                'verbose_name': '手术排班信息',
                'verbose_name_plural': '手术排班信息',
                'db_table_comment': '手术排班信息',
            },
        ),
        migrations.CreateModel(
            name='OperationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_no', models.CharField(db_comment='申请单号', max_length=36, verbose_name='手术申请单号')),
                ('gmt_execute', models.DateTimeField(db_comment='操作日期', verbose_name='操作日期')),
                ('executor_id', models.CharField(db_comment='操作人工号', max_length=36, verbose_name='操作人工号')),
                ('executor', models.CharField(db_comment='操作人姓名', max_length=64, verbose_name='操作人姓名')),
                ('execute_dept_id', models.CharField(db_comment='执行科室编码', max_length=36, verbose_name='执行科室编码')),
                ('execute_dept_name', models.CharField(db_comment='执行科室名称', max_length=64, verbose_name='执行科室名称')),
                ('status_code', models.PositiveSmallIntegerField(choices=[(1, '入手术间'), (2, '开始麻醉'), (3, '开始手术'), (4, '结束手术'), (5, '结束麻醉'), (6, '出手术间'), (7, '入复苏室'), (8, '出复苏室')], db_comment='手术状态编码', verbose_name='手术状态编码')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('adm_cls_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '手术状态信息',
                'verbose_name_plural': '手术状态信息',
                'db_table_comment': '手术状态信息',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmt_order', models.DateTimeField(db_comment='医嘱开立日期时间', verbose_name='医嘱开立日期时间')),
                ('doc_sign', models.CharField(blank=True, db_comment='医嘱开立者签名', max_length=255, null=True, verbose_name='医嘱开立者签名')),
                ('doc_id', models.CharField(db_comment='医务人员工号', max_length=36, verbose_name='医务人员工号')),
                ('doc_name', models.CharField(db_comment='医嘱开立者', max_length=64, verbose_name='医嘱开立者')),
                ('dept_id', models.CharField(db_comment='医疗卫生机构（科室）ID', max_length=36, verbose_name='医疗卫生机构（科室）ID')),
                ('dept_name', models.CharField(db_comment='医嘱开立科室', max_length=64, verbose_name='医嘱开立科室')),
                ('gmt_review', models.DateTimeField(db_comment='医嘱审核日期时间', verbose_name='医嘱审核日期时间')),
                ('reviewer_sign', models.CharField(db_comment='医嘱审核者签名', max_length=255, verbose_name='医嘱审核者签名')),
                ('reviewer_id', models.CharField(db_comment='医嘱审核者工号', max_length=36, verbose_name='医嘱审核者工号')),
                ('reviewer', models.CharField(db_comment='医嘱审核者', max_length=64, verbose_name='医嘱审核者')),
                ('index', models.PositiveIntegerField(db_comment='医嘱序号', verbose_name='医嘱序号')),
                ('order_id', models.CharField(db_comment='医嘱ID', max_length=36, unique=True, verbose_name='医嘱ID')),
                ('item_cls_code', models.CharField(choices=[('01', '药品类医嘱'), ('02', '检查类医嘱'), ('03', '检验类医嘱'), ('04', '手术类医嘱'), ('05', '处置类医嘱'), ('06', '材料类医嘱'), ('07', '嘱托医嘱'), ('08', '输血类医嘱'), ('99', '其他医嘱')], db_comment='医嘱项目类型代码', max_length=2, verbose_name='医嘱项目类型代码')),
                ('content', models.CharField(blank=True, db_comment='医嘱项目内容', max_length=255, null=True, verbose_name='医嘱项目内容')),
                ('gmt_effect_high', models.DateTimeField(db_comment='医嘱开始日期时间', verbose_name='医嘱开始日期时间')),
                ('gmt_effect_low', models.DateTimeField(db_comment='医嘱结束日期时间', verbose_name='医嘱结束日期时间')),
                ('rate_execute_code', models.CharField(blank=True, db_comment='医嘱执行频率编码', max_length=8, null=True, verbose_name='医嘱执行频率编码')),
                ('rate_execute_name', models.CharField(blank=True, db_comment='医嘱执行频率名称', max_length=36, null=True, verbose_name='医嘱执行频率名称')),
                ('route_code', models.CharField(db_comment='用药途径代码', max_length=3, verbose_name='用药途径代码')),
                ('route_name', models.CharField(db_comment='用药途径名称', max_length=36, verbose_name='用药途径名称')),
                ('dose', models.CharField(blank=True, db_comment='用药剂量-单次', max_length=36, null=True, verbose_name='用药剂量-单次')),
                ('dose_unit', models.CharField(blank=True, db_comment='用药剂量-单次-单位', max_length=36, null=True, verbose_name='用药剂量-单次-单位')),
                ('dose_total', models.CharField(blank=True, db_comment='药物使用总剂量', max_length=64, null=True, verbose_name='药物使用总剂量')),
                ('dose_total_unit', models.CharField(blank=True, db_comment='药物使用总剂量-单位', max_length=36, null=True, verbose_name='医嘱开立日期时间')),
                ('dose_total_day', models.PositiveSmallIntegerField(db_comment='药物使用总剂量-天数', db_default=1, verbose_name='药物使用总剂量-天数')),
                ('dosage_admin_code', models.CharField(blank=True, db_comment='药物剂型代码', max_length=8, null=True, verbose_name='药物剂型代码')),
                ('dosage_admin_name', models.CharField(blank=True, db_comment='药物剂型名称', max_length=36, null=True, verbose_name='药物剂型名称')),
                ('package_index', models.PositiveSmallIntegerField(db_comment='包装序号', db_default=1, verbose_name='医嘱开立日期时间')),
                ('product_code', models.CharField(blank=True, db_comment='药物编码', max_length=36, null=True, verbose_name='药物编码')),
                ('product_name', models.CharField(blank=True, db_comment='药物名称', max_length=64, null=True, verbose_name='药物名称')),
                ('product_capacity', models.CharField(blank=True, db_comment='药物规格', max_length=255, null=True, verbose_name='药物规格')),
                ('product_capacity_unit', models.CharField(blank=True, db_comment='药物规格单位', max_length=255, null=True, verbose_name='药物规格单位')),
                ('product_ins_code', models.CharField(blank=True, db_comment='药物医保类别编码', max_length=36, null=True, verbose_name='药物医保类别编码')),
                ('product_ins_name', models.CharField(blank=True, db_comment='药物医保类别名称', max_length=64, null=True, verbose_name='药物医保类别名称')),
                ('execute_dept_id', models.CharField(blank=True, db_comment='执行科室编码', max_length=36, null=True, verbose_name='执行科室编码')),
                ('execute_dept_name', models.CharField(blank=True, db_comment='执行科室名称', max_length=64, null=True, verbose_name='执行科室名称')),
                ('pre_order_id', models.CharField(blank=True, db_comment='父医嘱ID', help_text='没有父医嘱可以没有此occurrenceOf节点', max_length=64, null=True, verbose_name='父医嘱ID')),
                ('order_cls_code', models.PositiveSmallIntegerField(choices=[(1, '长期医嘱'), (2, '临时医嘱'), (9, '其他')], db_comment='医嘱类别编码', verbose_name='医嘱类别编码')),
                ('amount', models.PositiveSmallIntegerField(db_comment='领量(给药量)', default=1, verbose_name='领量(给药量)')),
                ('amount_unit', models.CharField(blank=True, db_comment='领量(给药量)-单位', max_length=36, null=True, verbose_name='领量(给药量)-单位')),
                ('gmt_start', models.DateTimeField(blank=True, db_comment='开始时间', null=True, verbose_name='开始时间')),
                ('gmt_end', models.DateTimeField(blank=True, db_comment='停止时间', null=True, verbose_name='停止时间')),
                ('note', models.CharField(blank=True, db_comment='医嘱备注信息', max_length=255, null=True, verbose_name='医嘱备注信息')),
                ('note_status', models.CharField(blank=True, db_comment='医嘱备注信息状态', max_length=255, null=True, verbose_name='医嘱备注信息状态')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('adm_cls_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '医嘱信息',
                'verbose_name_plural': '医嘱信息',
                'db_table_comment': '医嘱信息',
            },
        ),
        migrations.CreateModel(
            name='OrderFillerStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(db_comment='医嘱ID', max_length=36, verbose_name='医嘱ID')),
                ('gmt_execute', models.DateTimeField(db_comment='操作日期', verbose_name='操作日期')),
                ('executor_id', models.CharField(db_comment='操作人工号', max_length=36, verbose_name='操作人工号')),
                ('executor', models.CharField(db_comment='操作人姓名', max_length=64, verbose_name='操作人姓名')),
                ('dept_id', models.CharField(db_comment='执行科室编码', max_length=36, verbose_name='执行科室编码')),
                ('dept_name', models.CharField(db_comment='执行科室名称', max_length=64, verbose_name='执行科室名称')),
                ('apply_no', models.CharField(blank=True, db_comment='申请单号', max_length=36, null=True, verbose_name='申请单号')),
                ('item_cls_code', models.PositiveSmallIntegerField(choices=[(1, '长期医嘱'), (2, '临时医嘱'), (9, '其他')], db_comment='医嘱类别编码', verbose_name='医嘱类别编码')),
                ('bar_code', models.CharField(blank=True, db_comment='标本条码号', max_length=36, null=True, verbose_name='标本条码号')),
                ('gmt_collect', models.DateTimeField(blank=True, db_comment='采集日期', null=True, verbose_name='采集日期')),
                ('collector_id', models.CharField(blank=True, db_comment='采集人Id', max_length=36, null=True, verbose_name='采集人Id')),
                ('collector_name', models.CharField(blank=True, db_comment='采集人姓名', max_length=64, null=True, verbose_name='采集人姓名')),
                ('reason', models.CharField(blank=True, db_comment='医嘱撤消原因', max_length=255, null=True, verbose_name='医嘱撤消原因')),
                ('execute_status_code', models.CharField(db_comment='医嘱执行状态', max_length=36, verbose_name='医嘱执行状态')),
                ('execute_status_name', models.PositiveSmallIntegerField(choices=[(1, '生成医嘱执行档'), (2, '医嘱执行'), (9, '撤消执行')], db_comment='医嘱执行状态名称', verbose_name='医嘱执行状态名称')),
                ('times', models.PositiveIntegerField(db_comment='就诊次数', verbose_name='就诊次数')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('adm_no', models.CharField(db_comment='就诊流水号', help_text='部分HIS厂商通过patient_id+time确定就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '医嘱执行状态信息',
                'verbose_name_plural': '医嘱执行状态信息',
                'db_table_comment': '医嘱执行状态信息',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept_id', models.CharField(db_comment='医疗卫生机构（科室）标识-科室ID', max_length=36, unique=True, verbose_name='医疗卫生机构（科室）标识-科室ID')),
                ('dept_name', models.CharField(db_comment='医疗卫生机构（科室）实体名称', max_length=64, verbose_name='医疗卫生机构（科室）实体名称')),
                ('dept_cls_code', models.CharField(db_comment='医疗卫生机构（科室）类别-科室代码', max_length=16, verbose_name='医疗卫生机构（科室）类别-科室代码')),
                ('dept_cls_name', models.CharField(db_comment='医疗卫生机构（科室）类别-科室', max_length=64, verbose_name='医疗卫生机构（科室）类别-科室')),
                ('dept_role', models.CharField(blank=True, db_comment='医疗卫生机构（科室）角色名称', max_length=64, null=True, verbose_name='医疗卫生机构（科室）角色名称')),
                ('dept_addr', models.CharField(blank=True, db_comment='工作地址', max_length=255, null=True, verbose_name='工作地址')),
                ('dept_tel', models.CharField(blank=True, db_comment='工作联系方式：电话、邮箱地址等', max_length=36, null=True, verbose_name='工作联系方式：电话、邮箱地址等')),
                ('gmt_effect_high', models.DateTimeField(db_comment='角色有效期间开始', verbose_name='角色有效期间开始')),
                ('gmt_effect_low', models.DateTimeField(db_comment='角色有效期间结束', verbose_name='角色有效期间结束')),
                ('pre_dept_id', models.CharField(blank=True, db_comment='上级医疗卫生机构（科室）号标识', max_length=36, null=True, verbose_name='上级医疗卫生机构（科室）号标识')),
                ('pre_dept_name', models.CharField(blank=True, db_comment='上级医疗卫生机构（科室）号名称', max_length=64, null=True, verbose_name='级医疗卫生机构（科室）号名称')),
                ('author_id', models.CharField(db_comment='申请者医务人员ID', max_length=36, verbose_name='申请者医务人员ID')),
                ('author', models.CharField(db_comment='申请者医务人员姓名', max_length=36, verbose_name='申请者医务人员姓名')),
                ('author_dept_id', models.CharField(db_comment='申请者医务人员科室号标识', max_length=36, verbose_name='申请者医务人员科室号标识')),
                ('author_dept_name', models.CharField(db_comment='申请者医务人员科室名称', max_length=64, verbose_name='申请者医务人员科室名称')),
                ('author_dept_contact', models.CharField(db_comment='申请者医务人员科室联系人', max_length=64, verbose_name='申请者医务人员科室联系人')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(db_comment='申请时间', verbose_name='申请时间')),
                ('extra', models.JSONField(db_comment='补充信息', verbose_name='补充信息')),
            ],
            options={
                'verbose_name': '医疗机构信息',
                'verbose_name_plural': '医疗机构信息',
                'db_table_comment': '医疗机构信息',
            },
        ),
        migrations.CreateModel(
            name='OutPatient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmt_reg', models.DateTimeField(db_comment='挂号时间', verbose_name='挂号时间')),
                ('adm_no', models.CharField(blank=True, db_comment='就诊流水号', max_length=36, null=True, verbose_name='就诊流水号')),
                ('adm_cls_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('gmt_adm', models.DateTimeField(blank=True, db_comment='就诊日期时间', null=True, verbose_name='就诊日期时间')),
                ('reason', models.CharField(blank=True, db_comment='就诊原因描述', max_length=128, null=True, verbose_name='就诊原因描述')),
                ('ins_cls_code', models.CharField(choices=[('01', '城镇职工基本医疗保险'), ('02', '城镇居民基本医疗保险'), ('03', '新型农村合作医疗'), ('04', '公务员医疗补助'), ('05', '企业补充医疗保险'), ('06', '大额补充医疗保险'), ('07', '商业医疗保险'), ('99', '其他')], db_comment='医疗保险类别代码', max_length=2, verbose_name='医疗保险类别代码')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('doc_id', models.CharField(db_comment='医生的职工号', max_length=36, verbose_name='医生的职工号')),
                ('doc_name', models.CharField(db_comment='责任医师姓名', max_length=16, verbose_name='责任医师姓名')),
                ('dept_id', models.CharField(db_comment='服务场所科室标识', max_length=36, verbose_name='服务场所科室标识')),
                ('dept_name', models.CharField(db_comment='服务场所科室', max_length=64, verbose_name='服务场所科室')),
                ('org_code', models.CharField(choices=[('12360000491015900T', '南昌大学附属口腔医院（江西省口腔医院）')], db_comment='服务机构标识', max_length=18, verbose_name='服务机构标识')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
                ('extra', models.JSONField(db_comment='补充信息', verbose_name='补充信息')),
            ],
            options={
                'verbose_name': '门诊挂号信息',
                'verbose_name_plural': '门诊挂号信息',
                'db_table_comment': '门诊挂号信息',
            },
        ),
        migrations.CreateModel(
            name='OutpatientAppointStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.CharField(db_comment='预约ID', max_length=36, unique=True, verbose_name='预约ID')),
                ('gmt_schedule', models.DateTimeField(db_comment='预约日期时间', verbose_name='预约日期时间')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('id_no', models.CharField(db_comment='身份证号', max_length=36, verbose_name='身份证号')),
                ('patient_name', models.CharField(db_comment='姓名', max_length=64, verbose_name='姓名')),
                ('gmt_booking', models.DateTimeField(db_comment='系统预约日期时间', verbose_name='系统预约日期时间')),
                ('from_src', models.CharField(db_comment='系统id', max_length=36, verbose_name='系统id')),
                ('booking_code', models.PositiveSmallIntegerField(choices=[(1, '患者预约'), (9, '取消预约')], db_comment='预约状态代码', verbose_name='预约状态代码')),
                ('gmt_operate', models.DateTimeField(db_comment='医务人员预约日期时间', verbose_name='医务人员预约日期时间')),
                ('operator_id', models.CharField(db_comment='医务人员工号', max_length=36, verbose_name='医务人员工号')),
                ('schedule_id', models.CharField(db_comment='资源ID', max_length=36, verbose_name='资源ID')),
                ('gmt_effect_high', models.DateTimeField(db_comment='资源时段开始时间', verbose_name='资源时段开始时间')),
                ('gmt_effect_low', models.DateTimeField(db_comment='资源时段结束时间', verbose_name='资源时段结束时间')),
                ('extra', models.JSONField(db_comment='补充信息', verbose_name='补充信息')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '门诊预约状态',
                'verbose_name_plural': '门诊预约状态',
                'db_table_comment': '门诊预约状态',
            },
        ),
        migrations.CreateModel(
            name='Pathology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_no', models.CharField(db_comment='检查申请单编号', max_length=36, unique=True, verbose_name='检查申请单编号')),
                ('apply_desc', models.CharField(blank=True, db_comment='申请单详细内容', max_length=255, null=True, verbose_name='申请单详细内容')),
                ('gmt_effect_low', models.DateTimeField(db_comment='检查申请日期', verbose_name='检查申请日期')),
                ('class_code', models.CharField(choices=[('ECG', '心电检查'), ('UIS', '超声检查'), ('PIS', '病理检查'), ('RIS', '放射检查'), ('EIS', '内镜检查')], db_comment='检查类型编码', max_length=3, verbose_name='检查类型编码')),
                ('send_part', models.CharField(blank=True, db_comment='送检组织部位', max_length=255, null=True, verbose_name='送检组织部位')),
                ('send_part_amount', models.PositiveSmallIntegerField(db_comment='送检组织数量', db_default=1, verbose_name='检查申请单编号')),
                ('send_part_amount_unit', models.CharField(blank=True, db_comment='送检组织数量单位', max_length=36, null=True, verbose_name='送检组织数量单位')),
                ('bar_code', models.CharField(blank=True, db_comment='样本条码号', max_length=36, null=True, verbose_name='取材组织数量')),
                ('collect_part', models.CharField(blank=True, db_comment='取材组织部位', max_length=64, null=True, verbose_name='取材组织部位')),
                ('collect_part_amount', models.PositiveSmallIntegerField(db_comment='取材组织数量', db_default=1, verbose_name='取材组织数量')),
                ('collect_part_amount_unit', models.CharField(blank=True, db_comment='取材组织数量单位', max_length=36, null=True, verbose_name='取材组织数量单位')),
                ('fixation', models.CharField(blank=True, db_comment='固定液', max_length=64, null=True, verbose_name='固定液')),
                ('gmt_collect', models.DateTimeField(blank=True, db_comment='采集日期', null=True, verbose_name='采集日期')),
                ('send_doc_id', models.CharField(blank=True, db_comment='送检医师Id', max_length=36, null=True, verbose_name='送检医师Id')),
                ('send_doc_name', models.CharField(blank=True, db_comment='送检医师姓名', max_length=64, null=True, verbose_name='送检医师姓名')),
                ('gmt_apply', models.DateTimeField(db_comment='开单时间', verbose_name='开单时间')),
                ('doc_id', models.CharField(db_comment='开单医生工号', max_length=36, verbose_name='开单医生工号')),
                ('doc_name', models.CharField(db_comment='开单医生姓名', max_length=64, verbose_name='开单医生姓名')),
                ('dept_id', models.CharField(db_comment='申请科室编码', max_length=36, verbose_name='申请科室编码')),
                ('dept_name', models.CharField(db_comment='申请科室名称', max_length=64, verbose_name='申请科室名称')),
                ('gmt_review', models.DateTimeField(blank=True, db_comment='确认时间', null=True, verbose_name='确认时间')),
                ('reviewer_id', models.CharField(db_comment='确认医生工号', max_length=36, verbose_name='确认医生工号')),
                ('reviewer', models.CharField(db_comment='确认人姓名', max_length=64, verbose_name='确认人姓名')),
                ('record', models.CharField(blank=True, db_comment='病历摘要及手术所见', max_length=255, null=True, verbose_name='病历摘要及手术所见')),
                ('item_code', models.CharField(db_comment='检查项目编码', max_length=36, verbose_name='检查项目编码')),
                ('item_name', models.CharField(db_comment='检查项目名称', max_length=64, verbose_name='检查项目名称')),
                ('method_code', models.CharField(blank=True, db_comment='检查方式编码', max_length=36, null=True, verbose_name='检查方式编码')),
                ('method_name', models.CharField(blank=True, db_comment='检查方式名称', max_length=64, null=True, verbose_name='检查方式名称')),
                ('site_code', models.CharField(blank=True, db_comment='检查部位编码', max_length=36, null=True, verbose_name='检查部位编码')),
                ('site_name', models.CharField(blank=True, db_comment='检查部位名称', max_length=64, null=True, verbose_name='检查部位名称')),
                ('gmt_execute', models.DateTimeField(blank=True, db_comment='执行时间', null=True, verbose_name='执行时间')),
                ('execute_dept_id', models.CharField(blank=True, db_comment='执行科室编码', max_length=36, null=True, verbose_name='执行科室编码')),
                ('execute_dept_name', models.CharField(blank=True, db_comment='执行科室名称', max_length=64, null=True, verbose_name='执行科室名称')),
                ('note', models.CharField(blank=True, db_comment='申请注意事项', max_length=255, null=True, verbose_name='申请注意事项')),
                ('diags', models.JSONField(blank=True, db_comment='诊断信息', help_text='诊断(检查申请原因)', null=True, verbose_name='诊断信息')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('adm_cls_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '病理申请信息',
                'verbose_name_plural': '病理申请信息',
                'db_table_comment': '病理申请信息',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, unique=True, verbose_name='患者唯一标识ID')),
                ('gmt_reg', models.DateTimeField(db_comment='患者登记时间', verbose_name='患者登记时间')),
                ('id_no', models.CharField(db_comment='证件号码', max_length=36, verbose_name='证件号码')),
                ('id_code', models.CharField(choices=[('01', '居民身份证'), ('02', '居民户口簿'), ('03', '护照'), ('04', '军官证'), ('05', '驾驶证'), ('06', '港澳居民来往内地通行证'), ('07', '台湾居民来往内地通行证'), ('99', '其他法定有效证件')], db_comment='证件类型代码', help_text='来源:身份证件类别代码表(CV02.01.101)', max_length=2, verbose_name='证件类型代码')),
                ('patient_name', models.CharField(db_comment='患者姓名', max_length=36, verbose_name='患者姓名')),
                ('tel_no', models.CharField(db_comment='联系电话', max_length=36, verbose_name='联系电话')),
                ('sex_code', models.PositiveSmallIntegerField(choices=[(0, '未知的性别'), (1, '男性'), (2, '女性'), (9, '未说明的性别')], db_comment='性别代码', verbose_name='性别代码')),
                ('gmt_birth', models.DateField(db_comment='出生日期', verbose_name='出生日期')),
                ('addr_sal', models.CharField(db_comment='完整地址描述', max_length=128, verbose_name='完整地址描述')),
                ('addr_sta', models.CharField(blank=True, db_comment='自治区、直辖市', max_length=36, null=True, verbose_name='自治区、直辖市')),
                ('addr_cty', models.CharField(blank=True, db_comment='地址-市（地区）', max_length=36, null=True, verbose_name='地址-市（地区）')),
                ('addr_cnt', models.CharField(blank=True, db_comment='地址-县（区）', max_length=36, null=True, verbose_name='地址-县（区）')),
                ('addr_stb', models.CharField(blank=True, db_comment='地址-乡（镇、街道办事处）', max_length=36, null=True, verbose_name='地址-乡（镇、街道办事处）')),
                ('addr_str', models.CharField(blank=True, db_comment='地址-村（街、路、弄等）', max_length=36, null=True, verbose_name='地址-村（街、路、弄等）')),
                ('addr_bnr', models.CharField(blank=True, db_comment='地址-门牌号码', max_length=36, null=True, verbose_name='地址-门牌号码')),
                ('addr_zip', models.CharField(blank=True, db_comment='邮政编码', max_length=36, null=True, verbose_name='邮政编码')),
                ('marital_status_code', models.CharField(choices=[('10', '未婚'), ('20', '已婚'), ('21', '初婚'), ('22', '再婚'), ('23', '复婚'), ('30', '丧偶'), ('40', '离婚'), ('90', '未说明的婚姻状况')], db_comment='婚姻状况代码', max_length=2, verbose_name='婚姻状况代码')),
                ('ethnic_group_code', models.CharField(db_comment='民族代码', max_length=36, verbose_name='民族代码')),
                ('occupation_code', models.CharField(db_comment='职业类别代码', max_length=36, verbose_name='职业类别代码')),
                ('work_org', models.CharField(blank=True, db_comment='工作单位', max_length=36, null=True, verbose_name='工作单位')),
                ('work_org_tel', models.CharField(blank=True, db_comment='工作单位联系电话', max_length=36, null=True, verbose_name='工作单位联系电话')),
                ('hcard_no', models.CharField(blank=True, db_comment='健康卡号', max_length=36, null=True, verbose_name='健康卡号')),
                ('hcard_org_code', models.CharField(blank=True, choices=[('12360000491015900T', '南昌大学附属口腔医院（江西省口腔医院）')], db_comment='健康卡发放机构代码', max_length=18, null=True, verbose_name='健康卡发放机构代码')),
                ('gcard_no', models.CharField(blank=True, db_comment='城乡居民健康档案编号', max_length=36, null=True, verbose_name='城乡居民健康档案编号')),
                ('gcard_org_code', models.CharField(blank=True, choices=[('12360000491015900T', '南昌大学附属口腔医院（江西省口腔医院）')], db_comment='建档医疗机构组织机构代码', max_length=36, null=True, verbose_name='建档医疗机构组织机构代码')),
                ('contact_code', models.CharField(db_comment='联系人关系代码', max_length=36, verbose_name='联系人关系代码')),
                ('contact_tel', models.CharField(db_comment='联系人电话', max_length=36, verbose_name='联系人电话')),
                ('contact_cname', models.CharField(db_comment='联系人姓名', max_length=36, verbose_name='联系人姓名')),
                ('org_code', models.CharField(choices=[('12360000491015900T', '南昌大学附属口腔医院（江西省口腔医院）')], db_comment='组织机构代码', max_length=18, verbose_name='组织机构代码')),
                ('ins_code', models.CharField(choices=[('01', '城镇职工基本医疗保险'), ('02', '城镇居民基本医疗保险'), ('03', '新型农村合作医疗'), ('04', '公务员医疗补助'), ('05', '企业补充医疗保险'), ('06', '大额补充医疗保险'), ('07', '商业医疗保险'), ('99', '其他')], db_comment='医疗保险类别代码', max_length=2, verbose_name='医疗保险类别代码')),
                ('author_id', models.CharField(db_comment='登记人ID', max_length=36, verbose_name='登记人ID')),
                ('author', models.CharField(db_comment='登记人', max_length=64, verbose_name='登记人')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
                ('extra', models.JSONField(db_comment='补充信息', help_text='empi_id, outpatient_id, inpatient_id; 如有需要请自行在对应数据库建立索引', verbose_name='补充信息')),
            ],
            options={
                'verbose_name': '个人信息',
                'verbose_name_plural': '个人信息',
                'db_table_comment': '个人信息',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_id', models.CharField(db_comment='医务人员ID', max_length=36, unique=True, verbose_name='医务人员ID')),
                ('emp_name', models.CharField(db_comment='姓名', max_length=64, verbose_name='姓名')),
                ('job_code', models.CharField(db_comment='专业技术职务代码', max_length=10, verbose_name='专业技术职务代码')),
                ('job_name', models.CharField(db_comment='专业技术职务名称', max_length=64, verbose_name='专业技术职务名称')),
                ('telecom', models.CharField(db_comment='工作联系电话', max_length=64, verbose_name='工作联系电话')),
                ('gmt_effect_high', models.DateTimeField(db_comment='角色有效期间开始时间', verbose_name='角色有效期间开始时间')),
                ('gmt_effect_low', models.DateTimeField(db_comment='角色有效期间结束时间', verbose_name='角色有效期间结束时间')),
                ('id_no', models.CharField(db_comment='身份证号', max_length=32, verbose_name='身份证号')),
                ('id_code', models.CharField(choices=[('01', '居民身份证'), ('02', '居民户口簿'), ('03', '护照'), ('04', '军官证'), ('05', '驾驶证'), ('06', '港澳居民来往内地通行证'), ('07', '台湾居民来往内地通行证'), ('99', '其他法定有效证件')], db_comment='证件代码', max_length=2, verbose_name='证件代码')),
                ('sex_code', models.PositiveSmallIntegerField(choices=[(0, '未知的性别'), (1, '男性'), (2, '女性'), (9, '未说明的性别')], db_comment='性别代码', verbose_name='性别代码')),
                ('addr_birth', models.CharField(blank=True, db_comment='出生地', max_length=255, null=True, verbose_name='出生地')),
                ('gmt_birth', models.DateField(db_comment='出生日期', verbose_name='出生日期')),
                ('dept_id', models.CharField(db_comment='科室号标识', max_length=32, verbose_name='科室号标识')),
                ('dept_name', models.CharField(db_comment='科室号名称', max_length=64, verbose_name='科室号名称')),
                ('author_id', models.CharField(db_comment='申请者医务人员ID', max_length=36, verbose_name='申请者医务人员ID')),
                ('author', models.CharField(db_comment='申请者医务人员名称', max_length=64, verbose_name='申请者医务人员名称')),
                ('author_dept_id', models.CharField(db_comment='申请者科室ID', max_length=36, verbose_name='申请者科室ID')),
                ('author_dept_name', models.CharField(db_comment='申请者科室名称', max_length=64, verbose_name='申请者科室名称')),
                ('author_dept_contact', models.CharField(blank=True, db_comment='申请者科室联系人名称', max_length=64, null=True, verbose_name='申请者科室联系人名称')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(db_comment='申请时间', verbose_name='申请时间')),
            ],
            options={
                'verbose_name': '医疗卫生人员信息',
                'verbose_name_plural': '医疗卫生人员信息',
                'db_table_comment': '医疗卫生人员信息',
            },
        ),
        migrations.CreateModel(
            name='SourceAndSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_id', models.CharField(db_comment='排班标识', max_length=36, unique=True, verbose_name='排班标识')),
                ('roster_id', models.CharField(db_comment='操作者ID', max_length=36, verbose_name='操作者ID')),
                ('roster', models.CharField(db_comment='操作者', max_length=64, verbose_name='操作者')),
                ('gmt_rostered', models.DateTimeField(db_comment='操作时间', verbose_name='操作时间')),
                ('dept_cls_code', models.CharField(db_comment='医疗卫生机构业务科室分类代码', max_length=8, verbose_name='医疗卫生机构业务科室分类代码')),
                ('dept_cls_name', models.CharField(db_comment='医疗卫生机构业务科室分类名称', max_length=36, verbose_name='医疗卫生机构业务科室分类名称')),
                ('total', models.PositiveIntegerField(db_comment='资源总数', verbose_name='资源总数')),
                ('dept_id', models.CharField(db_comment='科室标识', max_length=36, verbose_name='科室标识')),
                ('res_rank_code', models.CharField(db_comment='资源级别代码', max_length=8, verbose_name='资源级别代码')),
                ('res_rank_name', models.CharField(db_comment='资源级别名称', max_length=36, verbose_name='资源级别名称')),
                ('doc_id', models.CharField(db_comment='出诊医生ID', max_length=36, verbose_name='出诊医生ID')),
                ('doc_name', models.CharField(db_comment='出诊医生姓名', max_length=36, verbose_name='出诊医生姓名')),
                ('job_code', models.CharField(db_comment='专业技术职务类别代码', max_length=36, verbose_name='专业技术职务类别代码')),
                ('job_name', models.CharField(db_comment='专业技术职务类别名称', max_length=36, verbose_name='专业技术职务类别名称')),
                ('id_no', models.CharField(db_comment='身份证号', max_length=36, verbose_name='身份证号')),
                ('res_code', models.PositiveSmallIntegerField(choices=[(1, '窗口号源'), (2, '自助机号源'), (3, '互联网号源'), (9, '通用号源')], db_comment='排班资源类型代码', verbose_name='排班资源类型代码')),
                ('amount', models.PositiveSmallIntegerField(db_comment='分时段资源总数', verbose_name='分时段资源总数')),
                ('gmt_effect_high', models.DateTimeField(db_comment='排班开始日期时间', verbose_name='排班开始日期时间')),
                ('gmt_effect_low', models.DateTimeField(db_comment='排班结束日期时间', verbose_name='排班结束日期时间')),
                ('remain', models.PositiveSmallIntegerField(db_comment='剩余号数', verbose_name='剩余号数')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '号源排班信息',
                'verbose_name_plural': '号源排班信息',
                'db_table_comment': '号源排班信息',
            },
        ),
        migrations.CreateModel(
            name='Terminology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset_code', models.CharField(db_comment='值集标识符', max_length=36, verbose_name='值集标识符')),
                ('dataset_name', models.CharField(db_comment='值集描述', max_length=64, verbose_name='值集描述')),
                ('status', models.BooleanField(db_comment='值集状态代码; 1: 启用，0：未启用', default=True, verbose_name='值集状态启用代码')),
                ('version_no', models.PositiveSmallIntegerField(db_comment='版本号', db_default=1, default=1, verbose_name='版本号')),
                ('version', models.CharField(db_comment='值集版本信息', max_length=36, verbose_name='值集版本信息')),
                ('item_code', models.CharField(db_comment='项目代码', max_length=36, verbose_name='项目代码')),
                ('item_name', models.CharField(db_comment='项目描述', max_length=64, verbose_name='项目描述')),
                ('item_status', models.BooleanField(db_comment='项目状态; 1: 启用，0：未启用', default=True, verbose_name='项目启用状态')),
                ('author_id', models.CharField(db_comment='值集注册者信息注册人ID', max_length=36, verbose_name='值集注册者信息注册人ID')),
                ('author', models.CharField(db_comment='值集注册者信息注册人姓名', max_length=64, verbose_name='值集注册者信息注册人姓名')),
                ('gmt_author', models.DateTimeField(db_comment='值集注册者时间', verbose_name='值集注册者时间')),
                ('extra', models.JSONField(db_comment='补充信息', verbose_name='补充信息')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '术语信息',
                'verbose_name_plural': '术语信息',
                'db_table_comment': '术语信息',
            },
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adm_no', models.CharField(db_comment='就诊流水号', help_text='部分厂商为patient_id+times组合成就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('gmt_in', models.DateTimeField(db_comment='转入日期时间', verbose_name='转入日期时间')),
                ('in_dept_id', models.CharField(db_comment='转入科室id', max_length=36, verbose_name='转入科室id')),
                ('in_dept_name', models.CharField(db_comment='转入科室名称', max_length=64, verbose_name='转入科室名称')),
                ('in_ward_id', models.CharField(db_comment='转入病区id', max_length=36, verbose_name='转入病区id')),
                ('in_ward_name', models.CharField(db_comment='转入病区名称', max_length=64, verbose_name='转入病区名称')),
                ('in_room_id', models.CharField(db_comment='转入病房id', max_length=36, verbose_name='转入病房id')),
                ('in_room_name', models.CharField(db_comment='转入病房名称', max_length=64, verbose_name='转入病房名称')),
                ('in_bed_id', models.CharField(db_comment='转入床号ID', max_length=36, verbose_name='转入床号ID')),
                ('in_bed_name', models.CharField(db_comment='转入床号', max_length=64, verbose_name='转入床号')),
                ('gmt_out', models.DateTimeField(db_comment='转出日期时间', verbose_name='转出日期时间')),
                ('out_dept_id', models.CharField(db_comment='转出科室id', max_length=36, verbose_name='转出科室id')),
                ('out_dept_name', models.CharField(db_comment='转出科室名称', max_length=64, verbose_name='转出科室名称')),
                ('out_ward_id', models.CharField(db_comment='转出病区id', max_length=36, verbose_name='转出病区id')),
                ('out_ward_name', models.CharField(db_comment='转出病区名称', max_length=64, verbose_name='转出病区名称')),
                ('out_room_id', models.CharField(db_comment='转出病房id', max_length=36, verbose_name='转出病房id')),
                ('out_room_name', models.CharField(db_comment='转出病房名称', max_length=64, verbose_name='转出病房名称')),
                ('out_bed_id', models.CharField(db_comment='转出床号ID', max_length=36, verbose_name='转出床号ID')),
                ('out_bed_name', models.CharField(db_comment='转出床号', max_length=64, verbose_name='转出床号')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '住院转科信息',
                'verbose_name_plural': '住院转科信息',
                'db_table_comment': '住院转科信息',
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adm_no', models.CharField(db_comment='就诊流水号', help_text='部分厂商为patient_id+times组合成就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('times', models.PositiveIntegerField(db_comment='就诊次数', verbose_name='就诊次数')),
                ('is_first', models.BooleanField(db_comment='初诊标识', default=True, verbose_name='初诊标识')),
                ('dept_id', models.CharField(db_comment='就诊科室ID', max_length=10, verbose_name='就诊科室ID')),
                ('dept_name', models.CharField(db_comment='就诊科室名称', max_length=36, verbose_name='就诊科室名称')),
                ('doctor_id', models.CharField(db_comment='接诊医生ID', max_length=10, verbose_name='接诊医生ID')),
                ('doctor_name', models.CharField(db_comment='接诊医生姓名', max_length=36, verbose_name='接诊医生姓名')),
                ('schedule_id', models.CharField(blank=True, db_comment='排班ID', max_length=36, null=True, verbose_name='排班ID')),
                ('index', models.PositiveSmallIntegerField(db_comment='排队号', default=1, verbose_name='排队号')),
                ('gmt_visit_start', models.DateTimeField(blank=True, db_comment='接诊开始时间', null=True, verbose_name='接诊开始时间')),
                ('gmt_visit_end', models.DateTimeField(blank=True, db_comment='接诊结束时间', null=True, verbose_name='接诊结束时间')),
                ('adm_cls_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('org_code', models.CharField(choices=[('12360000491015900T', '南昌大学附属口腔医院（江西省口腔医院）')], db_comment='医疗卫生机构代码', max_length=18, verbose_name='医疗卫生机构代码')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '门诊就诊信息',
                'verbose_name_plural': '门诊就诊信息',
                'db_table_comment': '门诊就诊信息',
            },
        ),
        migrations.CreateModel(
            name='BloodTrans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_no', models.CharField(blank=True, db_comment='申请单号', max_length=36, null=True, unique=True, verbose_name='申请单号')),
                ('apply_desc', models.CharField(blank=True, db_comment='申请单详细信息', max_length=255, null=True, verbose_name='申请单详细信息')),
                ('gmt_apply', models.DateTimeField(blank=True, db_comment='申请日期时间', null=True, verbose_name='申请日期时间')),
                ('property', models.CharField(choices=[('N', 'normal'), ('U', 'urgent'), ('C', 'critical'), ('E', 'endangered')], db_comment='优先（紧急）度代码', default='N', max_length=1, verbose_name='优先（紧急）度代码')),
                ('gmt_order', models.DateTimeField(blank=True, db_comment='开单时间', null=True, verbose_name='开单时间')),
                ('doc_id', models.CharField(blank=True, db_comment='开单医生工号', max_length=36, null=True, verbose_name='开单医生工号')),
                ('doc_name', models.CharField(blank=True, db_comment='开单医生姓名', max_length=64, null=True, verbose_name='开单医生姓名')),
                ('dept_id', models.CharField(blank=True, db_comment='申请科室编码', max_length=36, null=True, verbose_name='申请科室编码')),
                ('dept_name', models.CharField(blank=True, db_comment='申请科室名称', max_length=64, null=True, verbose_name='申请科室名称')),
                ('gmt_review', models.DateTimeField(blank=True, db_comment='审核日期时间', null=True, verbose_name='审核日期时间')),
                ('reviewer_id', models.CharField(blank=True, db_comment='审核者工号', max_length=36, null=True, verbose_name='审核者工号')),
                ('reviewer', models.CharField(blank=True, db_comment='审核者姓名', max_length=64, null=True, verbose_name='审核者姓名')),
                ('abo_code', models.PositiveSmallIntegerField(choices=[(1, 'A型'), (2, 'B型'), (3, 'O型'), (4, 'AB型'), (5, '不详')], db_comment='患者ABO血型代码', verbose_name='患者ABO血型代码')),
                ('rh_code', models.PositiveSmallIntegerField(choices=[(1, '阴性'), (2, '阳性'), (3, '不详'), (4, '未查')], db_comment='患者RH血型代码', verbose_name='患者RH血型代码')),
                ('height', models.CharField(blank=True, db_comment='患者身高', max_length=8, null=True, verbose_name='患者身高')),
                ('weight', models.CharField(blank=True, db_comment='患者体重', max_length=8, null=True, verbose_name='患者体重')),
                ('diastolic_pressure', models.CharField(blank=True, db_comment='患者舒张压', max_length=8, null=True, verbose_name='患者舒张压')),
                ('temperature', models.CharField(blank=True, db_comment='患者体温', max_length=8, null=True, verbose_name='患者体温')),
                ('pulse', models.CharField(blank=True, db_comment='患者脉搏', max_length=8, null=True, verbose_name='患者脉搏')),
                ('abo_code_apply', models.PositiveSmallIntegerField(choices=[(1, 'A型'), (2, 'B型'), (3, 'O型'), (4, 'AB型'), (5, '不详')], db_comment='申请ABO血型代码', verbose_name='申请ABO血型代码')),
                ('rh_code_apply', models.PositiveSmallIntegerField(choices=[(1, '阴性'), (2, '阳性'), (3, '不详'), (4, '未查')], db_comment='申请RH血型代码', verbose_name='申请RH血型代码')),
                ('is_collect', models.BooleanField(db_comment='采血标记', default=False, verbose_name='采血标记')),
                ('location', models.CharField(blank=True, db_comment='输血地点', max_length=255, null=True, verbose_name='输血地点')),
                ('purpose', models.CharField(blank=True, db_comment='输血目的', max_length=255, null=True, verbose_name='输血目的')),
                ('nature', models.CharField(blank=True, db_comment='输血性质', max_length=255, null=True, verbose_name='输血性质')),
                ('is_urgent', models.BooleanField(db_comment='输血紧急标志', default=False, verbose_name='输血紧急标志')),
                ('medical', models.CharField(blank=True, db_comment='病史信息', max_length=255, null=True, verbose_name='病史信息')),
                ('transfusion', models.CharField(blank=True, db_comment='输血史', max_length=255, null=True, verbose_name='输血史')),
                ('reaction', models.CharField(blank=True, db_comment='输血反应史', max_length=255, null=True, verbose_name='输血反应史')),
                ('allergy', models.CharField(blank=True, db_comment='药物过敏史', max_length=255, null=True, verbose_name='药物过敏史')),
                ('gravidity', models.PositiveSmallIntegerField(db_comment='孕次', default=0, verbose_name='孕次')),
                ('delivery', models.PositiveSmallIntegerField(db_comment='产次', default=0, verbose_name='产次')),
                ('other', models.CharField(blank=True, db_comment='其他重要病史', max_length=255, null=True, verbose_name='其他重要病史')),
                ('note', models.CharField(blank=True, db_comment='备注', max_length=255, null=True, verbose_name='备注')),
                ('blood_unit', models.CharField(blank=True, db_comment='血量单位', max_length=36, null=True, verbose_name='血量单位')),
                ('blood', models.PositiveSmallIntegerField(blank=True, db_comment='血量', null=True, verbose_name='血量')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('adm_cls_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '输血申请信息',
                'verbose_name_plural': '输血申请信息',
                'db_table_comment': '输血申请信息',
                'indexes': [models.Index(fields=['adm_no'], name='cdr_bloodtr_adm_no_beaaba_idx'), models.Index(fields=['patient_id'], name='cdr_bloodtr_patient_ea875c_idx')],
            },
        ),
        migrations.CreateModel(
            name='Check',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_no', models.CharField(db_comment='检查申请单编号', max_length=36, unique=True, verbose_name='检查申请单编号')),
                ('apply_desc', models.CharField(blank=True, db_comment='申请单详细内容', max_length=255, null=True, verbose_name='申请单详细内容')),
                ('gmt_effect_low', models.DateTimeField(blank=True, db_comment='检查申请有效日期时间开始', null=True, verbose_name='检查申请有效日期时间开始')),
                ('gmt_effect_high', models.DateTimeField(blank=True, db_comment='检查申请有效日期时间结束', null=True, verbose_name='检查申请有效日期时间结束')),
                ('property', models.CharField(choices=[('N', 'normal'), ('U', 'urgent'), ('C', 'critical'), ('E', 'endangered')], db_comment='优先（紧急）度代码', default='N', max_length=1, verbose_name='优先（紧急）度代码')),
                ('gmt_apply', models.DateTimeField(blank=True, db_comment='开单时间', null=True, verbose_name='开单时间')),
                ('doc_sign', models.CharField(blank=True, db_comment='申请单开立者签名', max_length=255, null=True, verbose_name='申请单开立者签名')),
                ('doc_id', models.CharField(blank=True, db_comment='开单医生编码', max_length=36, null=True, verbose_name='开单医生编码')),
                ('doc_name', models.CharField(blank=True, db_comment='开单医生姓名', max_length=64, null=True, verbose_name='开单医生姓名')),
                ('dept_id', models.CharField(blank=True, db_comment='申请科室编码', max_length=36, null=True, verbose_name='申请科室编码')),
                ('dept_name', models.CharField(blank=True, db_comment='申请科室名称', max_length=64, null=True, verbose_name='申请科室名称')),
                ('gmt_review', models.DateTimeField(blank=True, db_comment='审核日期时间', null=True, verbose_name='审核日期时间')),
                ('reviewer_id', models.CharField(blank=True, db_comment='审核者编码', max_length=36, null=True, verbose_name='审核者编码')),
                ('reviewer', models.CharField(blank=True, db_comment='审核者姓名', max_length=64, null=True, verbose_name='审核者姓名')),
                ('order_id', models.CharField(db_comment='医嘱ID', max_length=36, unique=True, verbose_name='医嘱ID')),
                ('item_code', models.CharField(blank=True, db_comment='检查项目编码', max_length=36, null=True, verbose_name='检查项目编码')),
                ('item_name', models.CharField(blank=True, db_comment='检查项目名称', max_length=64, null=True, verbose_name='检查项目名称')),
                ('method_code', models.CharField(blank=True, db_comment='检查方法编码', max_length=36, null=True, verbose_name='检查方法编码')),
                ('method_name', models.CharField(blank=True, db_comment='检查方法名称', max_length=64, null=True, verbose_name='检查方法名称')),
                ('class_code', models.CharField(choices=[('ECG', '心电检查'), ('UIS', '超声检查'), ('PIS', '病理检查'), ('RIS', '放射检查'), ('EIS', '内镜检查')], db_comment='检查类型编码', max_length=3, verbose_name='检查类型编码')),
                ('site_code', models.CharField(blank=True, db_comment='检查部位编码', max_length=36, null=True, verbose_name='检查部位编码')),
                ('site_name', models.CharField(blank=True, db_comment='检查部位名称', max_length=64, null=True, verbose_name='检查部位名称')),
                ('gmt_execute', models.DateTimeField(blank=True, db_comment='执行时间', null=True, verbose_name='执行时间')),
                ('execute_dept_id', models.CharField(blank=True, db_comment='执行科室编码', max_length=36, null=True, verbose_name='执行科室编码')),
                ('execute_dept_name', models.CharField(blank=True, db_comment='执行科室名称', max_length=64, null=True, verbose_name='执行科室名称')),
                ('note', models.CharField(blank=True, db_comment='申请注意事项', max_length=255, null=True, verbose_name='申请注意事项')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('adm_cls_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('diags', models.JSONField(blank=True, db_comment='诊断信息', help_text='诊断(检查申请原因)', null=True, verbose_name='诊断信息')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '检查申请信息',
                'verbose_name_plural': '检查申请信息',
                'db_table_comment': '检查申请信息',
                'indexes': [models.Index(fields=['order_id'], name='cdr_check_order_i_374608_idx'), models.Index(fields=['apply_no'], name='cdr_check_apply_n_011bd1_idx'), models.Index(fields=['adm_no'], name='cdr_check_adm_no_6a88ee_idx'), models.Index(fields=['patient_id'], name='cdr_check_patient_f02c48_idx')],
            },
        ),
        migrations.CreateModel(
            name='CheckAppointStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_id', models.CharField(db_comment='预约单流水号', max_length=36, unique=True, verbose_name='预约单流水号')),
                ('adm_cls_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('gmt_booking', models.DateTimeField(blank=True, db_comment='预约检查时间', null=True, verbose_name='预约检查时间')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('index', models.PositiveSmallIntegerField(db_comment='预约排序号', verbose_name='预约排序号')),
                ('dept_id', models.CharField(blank=True, db_comment='病人科室ID', max_length=36, null=True, verbose_name='病人科室ID')),
                ('dept_name', models.CharField(blank=True, db_comment='病人科室名称', max_length=64, null=True, verbose_name='病人科室名称')),
                ('device_id', models.CharField(blank=True, db_comment='预约设备编码(ID)', max_length=36, null=True, verbose_name='预约设备编码')),
                ('device_name', models.CharField(blank=True, db_comment='预约设备名称', max_length=64, null=True, verbose_name='预约设备名称')),
                ('booking_id', models.CharField(db_comment='预约员工号', max_length=36, verbose_name='预约员工号')),
                ('bookinger', models.CharField(db_comment='预约员姓名', max_length=64, verbose_name='预约员姓名')),
                ('execute_dept_id', models.CharField(blank=True, db_comment='执行科室编码(ID) ', max_length=36, null=True, verbose_name='执行科室编码')),
                ('execute_dept_name', models.CharField(blank=True, db_comment='执行科室名称', max_length=64, null=True, verbose_name='执行科室名称')),
                ('apply_no', models.CharField(db_comment='检查申请单编号', max_length=36, verbose_name='检查申请单编号')),
                ('order_id', models.CharField(db_comment='医嘱ID', max_length=36, verbose_name='医嘱ID')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '检查预约状态信息',
                'verbose_name_plural': '检查预约状态信息',
                'db_table_comment': '检查预约状态信息',
                'indexes': [models.Index(fields=['order_id'], name='cdr_checkap_order_i_828452_idx'), models.Index(fields=['apply_no'], name='cdr_checkap_apply_n_c856f2_idx'), models.Index(fields=['adm_no'], name='cdr_checkap_adm_no_337c05_idx'), models.Index(fields=['patient_id'], name='cdr_checkap_patient_89d6b9_idx')],
            },
        ),
        migrations.CreateModel(
            name='CheckReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_id', models.CharField(db_comment='报告ID', max_length=36, unique=True, verbose_name='报告ID')),
                ('title', models.CharField(db_comment='报告单名称', max_length=36, verbose_name='报告单名称')),
                ('exam_no', models.CharField(db_comment='检查号', max_length=36, verbose_name='检查号')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('adm_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('apply_id', models.CharField(db_comment='申请单id', max_length=36, verbose_name='申请单id')),
                ('gmt_apply', models.DateTimeField(db_comment='申请时间', verbose_name='申请时间')),
                ('apply_dept_code', models.CharField(db_comment='申请科室代码', max_length=36, verbose_name='申请科室代码')),
                ('apply_dept_name', models.CharField(db_comment='申请科室名称', max_length=64, verbose_name='申请科室名称')),
                ('apply_doc_id', models.CharField(db_comment='开单医生id', max_length=36, verbose_name='开单医生id')),
                ('apply_doc', models.CharField(db_comment='开单医生姓名', max_length=64, verbose_name='开单医生姓名')),
                ('item_code', models.CharField(db_comment='项目代码', max_length=36, verbose_name='项目代码')),
                ('item_name', models.CharField(db_comment='项目名称', max_length=64, verbose_name='项目名称')),
                ('item_cls_code', models.CharField(blank=True, db_comment='大类代码', help_text='江西省口腔医院市互认上传使用', max_length=36, null=True, verbose_name='大类代码')),
                ('item_cls_name', models.CharField(blank=True, db_comment='大类代码', help_text='江西省口腔医院市互认上传使用', max_length=36, null=True, verbose_name='大类代码')),
                ('extend_code', models.CharField(blank=True, db_comment='外部项目代码', max_length=36, null=True, verbose_name='江西省口腔医院市互认上传使用')),
                ('extend_name', models.CharField(blank=True, db_comment='外部项目名称', max_length=64, null=True, verbose_name='江西省口腔医院市互认上传使用')),
                ('checkpoint_id', models.CharField(blank=True, db_comment='检查部位代码', max_length=36, null=True, verbose_name='检查部位代码')),
                ('checkpoint', models.CharField(blank=True, db_comment='检查部位', max_length=36, null=True, verbose_name='检查部位')),
                ('content', models.CharField(db_comment='检查所见', max_length=255, verbose_name='检查所见')),
                ('url_report_pdf', models.URLField(db_comment='报告pdf链接', verbose_name='报告pdf链接')),
                ('url_image', models.URLField(blank=True, db_comment='图像查链接', null=True, verbose_name='图像查链接')),
                ('dept_id', models.CharField(db_comment='报告科室ID', max_length=36, verbose_name='报告科室ID')),
                ('dept_name', models.CharField(db_comment='报告科室名称', max_length=64, verbose_name='报告科室名称')),
                ('diags', models.CharField(db_comment='临床诊断', max_length=128, verbose_name='临床诊断')),
                ('diags_comment', models.CharField(db_comment='诊断意见', max_length=128, verbose_name='诊断意见')),
                ('comment', models.CharField(blank=True, db_comment='备注信息或检查提示', max_length=255, null=True, verbose_name='备注信息或检查提示')),
                ('exam_category_code', models.CharField(choices=[('ECG', '心电检查'), ('UIS', '超声检查'), ('PIS', '病理检查'), ('RIS', '放射检查'), ('EIS', '内镜检查')], db_comment='检查分类代码', max_length=3, verbose_name='检查分类代码')),
                ('executor_id', models.CharField(db_comment='检查医生ID', max_length=36, verbose_name='检查医生ID')),
                ('executor', models.CharField(db_comment='检查医生姓名', max_length=64, verbose_name='检查医生姓名')),
                ('gmt_execute', models.DateTimeField(db_comment='检查时间', verbose_name='检查时间')),
                ('author_id', models.CharField(db_comment='报告人id', max_length=36, verbose_name='报告人id')),
                ('author', models.CharField(db_comment='报告人', max_length=64, verbose_name='报告人')),
                ('gmt_author', models.DateTimeField(db_comment='报告日期时间', verbose_name='报告日期时间')),
                ('verifier_id', models.CharField(db_comment='审核者ID', max_length=36, verbose_name='审核者ID')),
                ('verifier', models.CharField(db_comment='审核者姓名', max_length=64, verbose_name='审核者姓名')),
                ('gmt_verified', models.DateTimeField(db_comment='审核日期时间', verbose_name='审核日期时间')),
                ('device_id', models.CharField(blank=True, db_comment='设备唯一id', max_length=36, null=True, verbose_name='设备唯一id')),
                ('device_name', models.CharField(blank=True, db_comment='设备名称', max_length=64, null=True, verbose_name='设备名称')),
                ('extra_infos', models.JSONField(blank=True, db_comment='补充信息', null=True, verbose_name='补充信息')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('org_code', models.CharField(choices=[('12360000491015900T', '南昌大学附属口腔医院（江西省口腔医院）')], db_comment='医疗卫生机构代码', max_length=18, verbose_name='医疗卫生机构代码')),
                ('org_name', models.CharField(db_comment='医疗卫生机构', max_length=64, verbose_name='医疗卫生机构')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '检查报告',
                'verbose_name_plural': '检查报告集合',
                'db_table_comment': '检查报告表',
                'indexes': [models.Index(fields=['patient_id'], name='cdr_checkre_patient_3265a2_idx'), models.Index(fields=['adm_no'], name='cdr_checkre_adm_no_255cea_idx')],
            },
        ),
        migrations.CreateModel(
            name='CheckStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_no', models.CharField(db_comment='申请单号', max_length=36, verbose_name='申请单号')),
                ('gmt_execute', models.DateTimeField(db_comment='操作日期', verbose_name='操作日期')),
                ('executor_id', models.CharField(db_comment='操作人工号', max_length=36, verbose_name='操作人工号')),
                ('executor', models.CharField(db_comment='操作人姓名', max_length=64, verbose_name='操作人姓名')),
                ('dept_id', models.CharField(db_comment='操作科室ID', max_length=36, verbose_name='操作科室ID')),
                ('dept_name', models.CharField(db_comment='操作科室名称', max_length=64, verbose_name='操作科室名称')),
                ('status_code', models.CharField(choices=[('SC01', '心电检查登记'), ('SC02', '取消心电检查登记'), ('SC03', '心电采集图像'), ('SC04', '心电书写报告'), ('SC05', '心电检查打印报告'), ('SC06', '超声检查预约'), ('SC07', '取消超声检查预约'), ('SC08', '超声检查登记'), ('SC09', '取消超声检查登记'), ('SC10', '超声检查采集图像'), ('SC11', '超声检查书写报告'), ('SC12', '超声检查打印报告'), ('SC13', '超声检查审核'), ('SC14', '超声检查复审'), ('SC15', '放射检查预约'), ('SC16', '取消放射检查预约'), ('SC17', '放射检查登记'), ('SC18', '取消放射检查登记'), ('SC19', '放射检查采集图像'), ('SC20', '放射检查书写报告'), ('SC21', '放射检查审核'), ('SC22', '放射检查复审'), ('SC23', '放射检查打印报告'), ('SC24', '内镜检查预约'), ('SC25', '取消内镜检查预约'), ('SC26', '内镜检查登记'), ('SC27', '取消内镜检查登记'), ('SC28', '内镜检查采集图像'), ('SC29', '内镜检查书写报告'), ('SC30', '内镜检查打印报告'), ('SC31', '内镜检查审核'), ('SC32', '内镜检查复审'), ('SC33', '病理检查登记'), ('SC34', '取消病理检查登记'), ('SC35', '病理检查书写报告'), ('SC36', '病理检查审核'), ('SC37', '病理检查打印报告')], db_comment='检查状态代码', max_length=4, verbose_name='检查状态')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('adm_cls_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '检查状态信息',
                'verbose_name_plural': '检查状态信息',
                'db_table_comment': '检查状态信息',
                'indexes': [models.Index(fields=['apply_no'], name='cdr_checkst_apply_n_57f02a_idx'), models.Index(fields=['adm_no'], name='cdr_checkst_adm_no_4c43ac_idx'), models.Index(fields=['patient_id'], name='cdr_checkst_patient_edab5c_idx')],
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adm_no', models.CharField(db_comment='就诊流水号', help_text='部分厂商为patient_id+times组合成就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('adm_cls_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('diagnosis_id', models.CharField(db_comment='诊断ID', max_length=36, unique=True, verbose_name='诊断ID')),
                ('index', models.PositiveSmallIntegerField(db_comment='诊断排序号', verbose_name='诊断排序号')),
                ('gmt_diag', models.DateTimeField(auto_now_add=True, db_comment='诊断下达时间', verbose_name='诊断下达时间')),
                ('diag_dept_id', models.CharField(db_comment='诊断下达科室唯一标识', max_length=36, verbose_name='诊断下达科室唯一标识')),
                ('diag_dept_name', models.CharField(db_comment='诊断下达科室名称', max_length=36, verbose_name='诊断下达科室名称')),
                ('diag_ward_id', models.CharField(blank=True, db_comment='诊断下达病区唯一标识', max_length=36, null=True, verbose_name='诊断下达病区唯一标识')),
                ('diag_ward_name', models.CharField(blank=True, db_comment='诊断下达病区名称', max_length=36, null=True, verbose_name='诊断下达病区名称')),
                ('diag_doctor_id', models.CharField(db_comment='下达诊断的医生唯一标识', max_length=36, verbose_name='下达诊断的医生唯一标识')),
                ('diag_doctor_name', models.CharField(db_comment='下达诊断的医生姓名', max_length=36, verbose_name='下达诊断的医生姓名')),
                ('diag_category_code', models.CharField(db_comment='诊断分类代码', max_length=36, verbose_name='诊断分类代码')),
                ('diag_category_name', models.CharField(db_comment='诊断分类名称', max_length=36, verbose_name='诊断分类名称')),
                ('diag_code', models.CharField(db_comment='疾病诊断编码', max_length=36, verbose_name='疾病诊断编码')),
                ('diag_name', models.CharField(db_comment='疾病诊断名称', max_length=36, verbose_name='疾病诊断名称')),
                ('diag_desc', models.CharField(blank=True, db_comment='诊断描述', max_length=64, null=True, verbose_name='诊断描述')),
                ('is_parent', models.BooleanField(db_comment='是否为父诊断', default=False, verbose_name='是否为父诊断')),
                ('parent_id', models.CharField(db_comment='父诊断唯一标识', max_length=36, verbose_name='父诊断唯一标识')),
                ('is_primary', models.BooleanField(db_comment='主诊标志', default=False, verbose_name='主诊标志')),
                ('is_uncertain', models.BooleanField(blank=True, db_comment='待查标志', null=True, verbose_name='待查标志')),
                ('is_infection', models.BooleanField(blank=True, db_comment='院感标志', null=True, verbose_name='院感标志')),
                ('is_infection_report', models.BooleanField(blank=True, db_comment='院感上报标志', null=True, verbose_name='院感上报标志')),
                ('org_code', models.CharField(choices=[('12360000491015900T', '南昌大学附属口腔医院（江西省口腔医院）')], db_comment='医疗卫生机构代码', max_length=18, verbose_name='医疗卫生机构代码')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '诊断信息',
                'verbose_name_plural': '诊断信息',
                'db_table_comment': '诊断信息',
                'indexes': [models.Index(fields=['adm_no'], name='cdr_diagnos_adm_no_6ef28f_idx'), models.Index(fields=['patient_id'], name='cdr_diagnos_patient_219216_idx')],
            },
        ),
        migrations.CreateModel(
            name='Discharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inpatient_id', models.CharField(db_comment='住院号标识', max_length=36, verbose_name='住院号标识')),
                ('times', models.PositiveIntegerField(db_comment='就诊次数', verbose_name='就诊次数')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, unique=True, verbose_name='就诊流水号')),
                ('adm_cls_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('gmt_discharge', models.DateTimeField(blank=True, db_comment='出院日期时间', null=True, verbose_name='出院日期时间')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('discharge_doc_id', models.CharField(blank=True, db_comment='出院登记的职工号', max_length=36, null=True, verbose_name='出院登记职工号')),
                ('discharge_doc_name', models.CharField(blank=True, db_comment='出院登记职工姓名', max_length=64, null=True, verbose_name='出院登记职工姓名')),
                ('dept_id', models.CharField(blank=True, db_comment='出院科室id', max_length=36, null=True, verbose_name='出院科室id')),
                ('dept_name', models.CharField(blank=True, db_comment='出院科室名称', max_length=64, null=True, verbose_name='出院科室名称')),
                ('ward_id', models.CharField(blank=True, db_comment='出院病区id', max_length=36, null=True, verbose_name='出院病区id')),
                ('ward_name', models.CharField(blank=True, db_comment='出院病区名称', max_length=64, null=True, verbose_name='出院病区名称')),
                ('diags_a', models.JSONField(blank=True, db_comment='西医诊断', null=True, verbose_name='西医诊断')),
                ('diags_b', models.JSONField(blank=True, db_comment='中医诊断', null=True, verbose_name='中医诊断')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '出院登记信息',
                'verbose_name_plural': '出院登记信息',
                'db_table_comment': '出院登记信息',
                'indexes': [models.Index(fields=['patient_id'], name='cdr_dischar_patient_1d5531_idx'), models.Index(fields=['adm_no'], name='cdr_dischar_adm_no_41c221_idx')],
            },
        ),
        migrations.CreateModel(
            name='EncounterCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_no', models.CharField(db_comment='就诊卡号', max_length=36, unique=True, verbose_name='就诊卡号')),
                ('gmt_reg', models.DateTimeField(db_comment='患者登记时间', verbose_name='患者登记时间')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, '激活'), (2, '作废'), (3, '退卡')], db_comment='就诊卡状态', help_text='1-active-激活;2-作废-diable;3-退卡-retired', verbose_name='就诊卡状态')),
                ('id_no', models.CharField(db_comment='证件号码', max_length=36, verbose_name='证件号码')),
                ('patient_name', models.CharField(db_comment='患者姓名', max_length=36, verbose_name='患者姓名')),
                ('tel_no', models.CharField(db_comment='联系电话', max_length=36, verbose_name='联系电话')),
                ('sex_code', models.PositiveSmallIntegerField(choices=[(0, '未知的性别'), (1, '男性'), (2, '女性'), (9, '未说明的性别')], db_comment='性别代码', verbose_name='性别代码')),
                ('gmt_birth', models.DateField(db_comment='出生日期', verbose_name='出生日期')),
                ('addr_sal', models.CharField(db_comment='完整地址描述', max_length=128, verbose_name='完整地址描述')),
                ('addr_sta', models.CharField(blank=True, db_comment='自治区、直辖市', max_length=36, null=True, verbose_name='自治区、直辖市')),
                ('addr_cty', models.CharField(blank=True, db_comment='地址-市（地区）', max_length=36, null=True, verbose_name='地址-市（地区）')),
                ('addr_cnt', models.CharField(blank=True, db_comment='地址-县（区）', max_length=36, null=True, verbose_name='地址-县（区）')),
                ('addr_stb', models.CharField(blank=True, db_comment='地址-乡（镇、街道办事处）', max_length=36, null=True, verbose_name='地址-乡（镇、街道办事处）')),
                ('addr_str', models.CharField(blank=True, db_comment='地址-村（街、路、弄等）', max_length=36, null=True, verbose_name='地址-村（街、路、弄等）')),
                ('addr_bnr', models.CharField(blank=True, db_comment='地址-门牌号码', max_length=36, null=True, verbose_name='地址-门牌号码')),
                ('addr_zip', models.CharField(blank=True, db_comment='邮政编码', max_length=36, null=True, verbose_name='邮政编码')),
                ('marital_status_code', models.CharField(choices=[('10', '未婚'), ('20', '已婚'), ('21', '初婚'), ('22', '再婚'), ('23', '复婚'), ('30', '丧偶'), ('40', '离婚'), ('90', '未说明的婚姻状况')], db_comment='婚姻状况代码', max_length=2, verbose_name='婚姻状况代码')),
                ('ethnic_group_code', models.CharField(db_comment='民族代码', max_length=36, verbose_name='民族代码')),
                ('occupation_code', models.CharField(db_comment='职业类别代码', max_length=36, verbose_name='职业类别代码')),
                ('work_org', models.CharField(blank=True, db_comment='工作单位', max_length=36, null=True, verbose_name='工作单位')),
                ('work_org_tel', models.CharField(blank=True, db_comment='工作单位联系电话', max_length=36, null=True, verbose_name='工作单位联系电话')),
                ('contact_code', models.CharField(db_comment='联系人关系代码', max_length=36, verbose_name='联系人关系代码')),
                ('contact_tel', models.CharField(db_comment='联系人电话', max_length=36, verbose_name='联系人电话')),
                ('contact_cname', models.CharField(db_comment='联系人姓名', max_length=36, verbose_name='联系人姓名')),
                ('org_code', models.CharField(choices=[('12360000491015900T', '南昌大学附属口腔医院（江西省口腔医院）')], db_comment='组织机构代码', max_length=18, verbose_name='组织机构代码')),
                ('ins_code', models.CharField(choices=[('01', '城镇职工基本医疗保险'), ('02', '城镇居民基本医疗保险'), ('03', '新型农村合作医疗'), ('04', '公务员医疗补助'), ('05', '企业补充医疗保险'), ('06', '大额补充医疗保险'), ('07', '商业医疗保险'), ('99', '其他')], db_comment='医疗保险类别代码', max_length=2, verbose_name='医疗保险类别代码')),
                ('author_id', models.CharField(db_comment='登记人ID', max_length=36, verbose_name='登记人ID')),
                ('author', models.CharField(db_comment='登记人', max_length=64, verbose_name='登记人')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '就诊卡信息',
                'verbose_name_plural': '就诊卡信息',
                'db_table_comment': '就诊卡信息',
                'indexes': [models.Index(fields=['card_no'], name='cdr_encount_card_no_f2f3d7_idx'), models.Index(fields=['id_no'], name='cdr_encount_id_no_5f527c_idx'), models.Index(fields=['tel_no'], name='cdr_encount_tel_no_fec101_idx')],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_no', models.CharField(db_comment='电子申请单编号', max_length=36, unique=True, verbose_name='电子申请单编号')),
                ('apply_desc', models.CharField(blank=True, db_comment='申请单描述', max_length=255, null=True, verbose_name='申请单描述')),
                ('apply_status', models.CharField(blank=True, db_comment='申请单状态', max_length=8, null=True, verbose_name='申请单状态')),
                ('gmt_effect_high', models.DateTimeField(db_comment='申请单有效日期时间开始', verbose_name='申请单有效日期时间开始')),
                ('gmt_effect_low', models.DateTimeField(db_comment='申请单有效日期时间结束', verbose_name='申请单有效日期时间结束')),
                ('property', models.CharField(choices=[('N', 'normal'), ('U', 'urgent'), ('C', 'critical'), ('E', 'endangered')], db_comment='优先（紧急）度代码', default='N', max_length=1, verbose_name='优先（紧急）度代码')),
                ('bar_code', models.CharField(blank=True, db_comment='条码号', max_length=36, null=True, verbose_name='条码号')),
                ('specimen_cls_code', models.CharField(blank=True, db_comment='标本类别代码', max_length=8, null=True, verbose_name='标本类别代码')),
                ('specimen_cls_name', models.CharField(blank=True, db_comment='标本类别名称', max_length=36, null=True, verbose_name='标本类别名称')),
                ('gmt_apply', models.DateTimeField(db_comment='开单时间', verbose_name='开单时间')),
                ('doc_sign', models.CharField(blank=True, db_comment='申请单开立者签名', max_length=255, null=True, verbose_name='申请单开立者签名')),
                ('doc_id', models.CharField(db_comment='开单医生编码', max_length=36, verbose_name='开单医生编码')),
                ('doc_name', models.CharField(db_comment='开单医生姓名', max_length=64, verbose_name='开单医生姓名')),
                ('dept_id', models.CharField(db_comment='申请科室编码', max_length=36, verbose_name='申请科室编码')),
                ('dept_name', models.CharField(db_comment='申请科室名称', max_length=64, verbose_name='申请科室名称')),
                ('gmt_review', models.DateTimeField(db_comment='审核日期时间', verbose_name='审核日期时间')),
                ('reviewer_id', models.CharField(db_comment='审核者编码', max_length=36, verbose_name='审核者编码')),
                ('reviewer', models.CharField(db_comment='审核者姓名', max_length=64, verbose_name='审核者姓名')),
                ('order_id', models.CharField(db_comment='医嘱ID', max_length=36, unique=True, verbose_name='医嘱ID')),
                ('item_code', models.CharField(db_comment='检验项目编码', max_length=36, verbose_name='检验项目编码')),
                ('item_name', models.CharField(db_comment='检验项目名称', max_length=64, verbose_name='检验项目名称')),
                ('method_code', models.CharField(blank=True, db_comment='检验方法编码', max_length=8, null=True, verbose_name='检验方法编码')),
                ('method_name', models.CharField(blank=True, db_comment='检验方法名称', max_length=64, null=True, verbose_name='检验方法名称')),
                ('gmt_execute', models.DateTimeField(blank=True, db_comment='执行时间', null=True, verbose_name='执行时间')),
                ('execute_dept_id', models.CharField(blank=True, db_comment='执行科室编码', max_length=36, null=True, verbose_name='执行科室编码')),
                ('execute_dept_name', models.CharField(blank=True, db_comment='执行科室名称', max_length=64, null=True, verbose_name='执行科室名称')),
                ('note', models.CharField(blank=True, db_comment='申请注意事项', max_length=255, null=True, verbose_name='申请注意事项')),
                ('diags', models.JSONField(blank=True, db_comment='诊断信息', help_text='检验申请原因', null=True, verbose_name='诊断信息')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('adm_cls_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '检验申请信息',
                'verbose_name_plural': '检验申请信息',
                'db_table_comment': '检验申请信息',
                'indexes': [models.Index(fields=['adm_no'], name='cdr_exam_adm_no_a9dc59_idx'), models.Index(fields=['patient_id'], name='cdr_exam_patient_31992b_idx')],
            },
        ),
        migrations.CreateModel(
            name='ExamReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_id', models.CharField(db_comment='检验报告ID', max_length=36, unique=True, verbose_name='检验报告ID')),
                ('title', models.CharField(db_comment='报告单名称', max_length=36, verbose_name='报告单名称')),
                ('bar_code', models.CharField(db_comment='条码号', max_length=18, verbose_name='条码号')),
                ('specimen_id', models.CharField(blank=True, db_comment='标本id', max_length=18, null=True, verbose_name='标本id')),
                ('specimen_name', models.CharField(blank=True, db_comment='标本名称', max_length=18, null=True, verbose_name='标本名称')),
                ('specimen_cls_code', models.CharField(db_comment='标本类型代码', max_length=18, verbose_name='标本类型代码')),
                ('specimen_cls_name', models.CharField(db_comment='标本类型名称', help_text='标本类型名称,eg: 血清,尿液...', max_length=18, verbose_name='标本类型名称')),
                ('exam_cls_code', models.PositiveSmallIntegerField(choices=[(1, '普通'), (2, '细菌药敏'), (3, '文字描述型结果')], db_comment='检验类型', verbose_name='检验类型')),
                ('dept_id', models.CharField(db_comment='报告科室ID', max_length=36, verbose_name='报告科室ID')),
                ('dept_name', models.CharField(db_comment='报告科室', max_length=18, verbose_name='报告科室')),
                ('adm_no', models.CharField(db_comment='就诊流水号', max_length=36, verbose_name='就诊流水号')),
                ('patient_id', models.CharField(db_comment='患者唯一标识ID', max_length=36, verbose_name='患者唯一标识ID')),
                ('adm_code', models.PositiveSmallIntegerField(choices=[(1, '门诊'), (2, '急诊'), (3, '住院'), (4, '体检'), (9, '其他')], db_comment='就诊类别代码', verbose_name='就诊类别代码')),
                ('content', models.CharField(blank=True, db_comment='检验所见', max_length=255, null=True, verbose_name='检验所见')),
                ('comment', models.CharField(blank=True, db_comment='备注内容', max_length=255, null=True, verbose_name='备注内容')),
                ('url_report_pdf', models.URLField(db_comment='报告pdf链接', verbose_name='报告pdf链接')),
                ('device_id', models.CharField(blank=True, db_comment='设备唯一id', max_length=36, null=True, verbose_name='设备唯一id')),
                ('device_name', models.CharField(blank=True, db_comment='设备名称', max_length=64, null=True, verbose_name='设备名称')),
                ('gmt_collect', models.DateTimeField(db_comment='样本采集时间', verbose_name='样本采集时间')),
                ('gmt_receive', models.DateTimeField(db_comment='样本接收时间', verbose_name='样本接收时间')),
                ('executor_id', models.CharField(db_comment='执行者ID', max_length=36, verbose_name='执行者ID')),
                ('executor', models.CharField(db_comment='执行者姓名', max_length=64, verbose_name='执行者姓名')),
                ('gmt_execute', models.DateTimeField(db_comment='执行日期', verbose_name='执行日期')),
                ('author_id', models.CharField(db_comment='报告人id', max_length=36, verbose_name='报告人id')),
                ('author', models.CharField(db_comment='报告人', max_length=64, verbose_name='报告人')),
                ('gmt_author', models.DateTimeField(db_comment='报告日期时间', verbose_name='报告日期时间')),
                ('reviewer_id', models.CharField(db_comment='复核医生', max_length=36, verbose_name='复核医生')),
                ('reviewer', models.CharField(db_comment='复核医生姓名', max_length=64, verbose_name='复核医生姓名')),
                ('gmt_review', models.DateTimeField(db_comment='复核日期时间', verbose_name='复核日期时间')),
                ('is_other', models.BooleanField(db_comment='第三方检测机构标识', default=False, verbose_name='第三方检测机构标识')),
                ('other_name', models.CharField(blank=True, db_comment='第三方检测机构名称', max_length=64, null=True, verbose_name='第三方检测机构名称')),
                ('from_src', models.CharField(db_comment='来源系统', max_length=36, verbose_name='来源系统')),
                ('org_code', models.CharField(choices=[('12360000491015900T', '南昌大学附属口腔医院（江西省口腔医院）')], db_comment='医疗卫生机构代码', max_length=18, verbose_name='医疗卫生机构代码')),
                ('org_name', models.CharField(db_comment='医疗卫生机构', max_length=64, verbose_name='医疗卫生机构')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '检验报告信息',
                'verbose_name_plural': '检验报告信息',
                'db_table_comment': '检验报告表',
                'indexes': [models.Index(fields=['adm_no'], name='cdr_examrep_adm_no_cab652_idx'), models.Index(fields=['patient_id'], name='cdr_examrep_patient_d5b9da_idx')],
            },
        ),
        migrations.CreateModel(
            name='ExamResultDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveIntegerField(db_comment='序号', verbose_name='序号')),
                ('item_code', models.CharField(db_comment='检测项目代码', max_length=36, verbose_name='检测项目代码')),
                ('item_name', models.CharField(db_comment='检测项目', max_length=36, verbose_name='检测项目')),
                ('abbr', models.CharField(db_comment='检测项目缩写', max_length=36, verbose_name='检测项目缩写')),
                ('value', models.CharField(db_comment='结果内容/细菌结果', max_length=255, verbose_name='结果内容/细菌结果')),
                ('unit', models.CharField(blank=True, db_comment='单位', max_length=36, null=True, verbose_name='单位')),
                ('comment', models.CharField(blank=True, db_comment='提示', max_length=64, null=True, verbose_name='提示')),
                ('remarks', models.CharField(blank=True, db_comment='备注信息', max_length=128, null=True, verbose_name='备注信息')),
                ('upper_limit_value', models.CharField(blank=True, db_comment='参考值上限', max_length=36, null=True, verbose_name='参考值上限')),
                ('lower_limit_value', models.CharField(blank=True, db_comment='参考值下限', max_length=36, null=True, verbose_name='参考值下限')),
                ('limit_desc', models.CharField(db_comment='参考值描述', max_length=255, verbose_name='参考值描述')),
                ('abnormal_flag_code', models.CharField(db_comment='结果值标志代码', max_length=16, verbose_name='结果值标志代码')),
                ('abnormal_flag_name', models.CharField(db_comment='结果值标志名称', max_length=16, verbose_name='结果值标志名称')),
                ('is_warn', models.BooleanField(db_comment='危急值标识', default=False, verbose_name='危急值标识')),
                ('test_method_code', models.CharField(blank=True, db_comment='检测方法代码', max_length=36, null=True, verbose_name='检测方法代码')),
                ('test_method_name', models.CharField(blank=True, db_comment='检测方法名称', max_length=36, null=True, verbose_name='检测方法名称')),
                ('is_germ', models.BooleanField(db_comment='是否为微生物', default=False, verbose_name='是否为微生物')),
                ('bacterium_id', models.CharField(blank=True, db_comment='细菌id', max_length=36, null=True, verbose_name='细菌id')),
                ('bacterium_code', models.CharField(blank=True, db_comment='细菌代码（用于耐药性和细菌培养）', max_length=36, null=True, verbose_name='细菌代码（用于耐药性和细菌培养）')),
                ('bacterium_name', models.CharField(blank=True, db_comment='细菌名称', max_length=36, null=True, verbose_name='细菌名称')),
                ('bacterium_abbr', models.CharField(blank=True, db_comment='细菌名称_英文', max_length=128, null=True, verbose_name='细菌名称_英文')),
                ('bacterium_type_code', models.CharField(blank=True, db_comment='菌种类型代码', max_length=36, null=True, verbose_name='菌种类型代码')),
                ('bacterium_type_name', models.CharField(blank=True, db_comment='菌种类型名称', max_length=64, null=True, verbose_name='菌种类型名称')),
                ('extend_code', models.CharField(blank=True, db_comment='外部项目代码', max_length=36, null=True, verbose_name='江西省口腔医院市互认上传使用')),
                ('extend_name', models.CharField(blank=True, db_comment='外部项目名称', max_length=64, null=True, verbose_name='江西省口腔医院市互认上传使用')),
                ('exam_result_main_id', models.CharField(db_comment='检验结果主表', max_length=64, verbose_name='检验结果主表')),
                ('gmt_created', models.DateTimeField(auto_now_add=True, db_comment='系统记录时间', verbose_name='系统记录时间')),
            ],
            options={
                'verbose_name': '检验结果明细表',
                'verbose_name_plural': '检验结果明细集合',
                'db_table_comment': '检验结果明细表',
                'indexes': [models.Index(fields=['exam_result_main_id'], name='cdr_examres_exam_re_ced6d1_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='examresultdetail',
            constraint=models.UniqueConstraint(fields=('exam_result_main_id', 'index'), name='unique_exam_result_main_id_index'),
        ),
        migrations.AddIndex(
            model_name='examresultdetailast',
            index=models.Index(fields=['exam_result_detail_id'], name='cdr_examres_exam_re_d0fe3c_idx'),
        ),
        migrations.AddConstraint(
            model_name='examresultdetailast',
            constraint=models.UniqueConstraint(fields=('exam_result_detail_id', 'index'), name='unique_exam_result_detail_id_index'),
        ),
        migrations.AddIndex(
            model_name='examresultmain',
            index=models.Index(fields=['exam_report_id'], name='cdr_examres_exam_re_1da732_idx'),
        ),
        migrations.AddIndex(
            model_name='examstatus',
            index=models.Index(fields=['apply_no'], name='cdr_examsta_apply_n_b8dfb4_idx'),
        ),
        migrations.AddIndex(
            model_name='examstatus',
            index=models.Index(fields=['adm_no'], name='cdr_examsta_adm_no_e3433a_idx'),
        ),
        migrations.AddIndex(
            model_name='examstatus',
            index=models.Index(fields=['patient_id'], name='cdr_examsta_patient_287855_idx'),
        ),
        migrations.AddIndex(
            model_name='inpatient',
            index=models.Index(fields=['patient_id'], name='cdr_inpatie_patient_8a29af_idx'),
        ),
        migrations.AddIndex(
            model_name='inpatient',
            index=models.Index(fields=['adm_no'], name='cdr_inpatie_adm_no_d3cebd_idx'),
        ),
        migrations.AddIndex(
            model_name='operation',
            index=models.Index(fields=['adm_no'], name='cdr_operati_adm_no_62857a_idx'),
        ),
        migrations.AddIndex(
            model_name='operation',
            index=models.Index(fields=['patient_id'], name='cdr_operati_patient_4e7332_idx'),
        ),
        migrations.AddIndex(
            model_name='operationschedule',
            index=models.Index(fields=['adm_no'], name='cdr_operati_adm_no_6cebad_idx'),
        ),
        migrations.AddIndex(
            model_name='operationschedule',
            index=models.Index(fields=['patient_id'], name='cdr_operati_patient_4f13a9_idx'),
        ),
        migrations.AddIndex(
            model_name='operationstatus',
            index=models.Index(fields=['apply_no'], name='cdr_operati_apply_n_a4497c_idx'),
        ),
        migrations.AddIndex(
            model_name='operationstatus',
            index=models.Index(fields=['adm_no'], name='cdr_operati_adm_no_960771_idx'),
        ),
        migrations.AddIndex(
            model_name='operationstatus',
            index=models.Index(fields=['patient_id'], name='cdr_operati_patient_d8714a_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['adm_no'], name='cdr_order_adm_no_29fa21_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['patient_id'], name='cdr_order_patient_a8a620_idx'),
        ),
        migrations.AddIndex(
            model_name='orderfillerstatus',
            index=models.Index(fields=['order_id'], name='cdr_orderfi_order_i_f22c2c_idx'),
        ),
        migrations.AddIndex(
            model_name='orderfillerstatus',
            index=models.Index(fields=['patient_id'], name='cdr_orderfi_patient_009604_idx'),
        ),
        migrations.AddIndex(
            model_name='orderfillerstatus',
            index=models.Index(fields=['patient_id', 'times'], name='cdr_orderfi_patient_17aeba_idx'),
        ),
        migrations.AddIndex(
            model_name='outpatient',
            index=models.Index(fields=['adm_no'], name='cdr_outpati_adm_no_c629a4_idx'),
        ),
        migrations.AddIndex(
            model_name='outpatient',
            index=models.Index(fields=['patient_id'], name='cdr_outpati_patient_b3a0d8_idx'),
        ),
        migrations.AddIndex(
            model_name='outpatientappointstatus',
            index=models.Index(fields=['patient_id'], name='cdr_outpati_patient_eceffc_idx'),
        ),
        migrations.AddIndex(
            model_name='pathology',
            index=models.Index(fields=['adm_no'], name='cdr_patholo_adm_no_dcf516_idx'),
        ),
        migrations.AddIndex(
            model_name='pathology',
            index=models.Index(fields=['patient_id'], name='cdr_patholo_patient_32704f_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['patient_id'], name='cdr_patient_patient_791cd3_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['id_no'], name='cdr_patient_id_no_95b376_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['tel_no'], name='cdr_patient_tel_no_6d3d2d_idx'),
        ),
        migrations.AddIndex(
            model_name='terminology',
            index=models.Index(fields=['dataset_code'], name='cdr_termino_dataset_1e5f45_idx'),
        ),
        migrations.AddIndex(
            model_name='terminology',
            index=models.Index(fields=['item_code'], name='cdr_termino_item_co_428e45_idx'),
        ),
        migrations.AddConstraint(
            model_name='terminology',
            constraint=models.UniqueConstraint(fields=('dataset_code', 'item_code'), name='unique_dataset_code_item_code'),
        ),
        migrations.AddIndex(
            model_name='transfer',
            index=models.Index(fields=['adm_no'], name='cdr_transfe_adm_no_768c0f_idx'),
        ),
        migrations.AddIndex(
            model_name='transfer',
            index=models.Index(fields=['patient_id'], name='cdr_transfe_patient_cd1bb2_idx'),
        ),
        migrations.AddIndex(
            model_name='visit',
            index=models.Index(fields=['adm_no'], name='cdr_visit_adm_no_a44541_idx'),
        ),
        migrations.AddIndex(
            model_name='visit',
            index=models.Index(fields=['patient_id'], name='cdr_visit_patient_164acb_idx'),
        ),
    ]
